% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logr.R
\name{log_print}
\alias{log_print}
\title{Print an object to the log}
\usage{
log_print(x, ..., console = TRUE, blank_after = TRUE, msg = FALSE)
}
\arguments{
\item{x}{The object to print.}

\item{...}{Any parameters to pass to the print function.}

\item{console}{Whether or not to print to the console.  Valid values are
TRUE and FALSE.  Default is TRUE.}

\item{blank_after}{Whether or not to print a blank line following the
printed object.  The blank line helps readability of the log.  Valid values
are TRUE and FALSE. Default is TRUE.}

\item{msg}{Whether to print the object to the msg log.  This parameter is
intended to be used internally.  Value values are TRUE and FALSE.  The
default value is FALSE.}
}
\value{
None
}
\description{
The \code{log_print} function prints an object to the currently opened log.
}
\details{
The log is initialized with \code{log_open}.  Once the log is open, objects
like variables and data frames can be printed to the log to monitor execution
of your script.  If working interactively, the function will print both to
the log and to the console.  The \code{log_print} function is useful when
writing and debugging batch scripts, and in situations where some record
of a scripts' execution is required.
}
\examples{
# Open the log
log_open("test.log")

# Print test messages
log_print("Test message")
log_print(mtcars)

# Close the log
log_close()
}
\seealso{
\code{\link{log_open}} to open the log,
and \code{\link{log_close}} to close the log.
}
